#!/usr/bin/env python
# Need to monkey patch stdlib before anything else is imported and has a chance to create threads.
from gevent import monkey, Greenlet
monkey.patch_all()  # noqa

import threading
import gc

import rospy
from std_msgs.msg import String


'''
In this example we patch stdlib to use Greenlets. We then subscribe to the gevent-based publisher node and report
both what it is reporting and what our thread/greenlet count is. See other scripts for more details.
'''


def callback(data):
    thread_count = threading.active_count()
    greenlet_count = len([g for g in gc.get_objects() if isinstance(g, Greenlet)])
    sub_msg = 'Thread count: {}. Greenlet count: {}'.format(thread_count, greenlet_count)
    rospy.loginfo('The publisher reports: {}.  The subscriber reports: {}'.format(data.data, sub_msg))


if __name__ == '__main__':
    rospy.init_node('patched_subscriber')
    rospy.Subscriber('string_topic', String, callback)
    rospy.spin()
